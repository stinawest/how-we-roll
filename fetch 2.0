<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>fetching data</title>
</head>
<body>

<div id="debug"></div>
    <canvas id="report" width="1000" height="1000"></canvas>

<script>
    // https://html.spec.whatwg.org/#the-table-element (sett 2021-10-07)
    // https://developer.mozilla.org/en-US/docs/Web/API/Document_object_model/How_to_create_a_DOM_tree (sett 2021-10-06)
    function createTableSkeleton() {
        var hwrTable = document.createElement("table");
        document.body.appendChild(hwrTable);

        var hwrTableCaption = document.createElement("caption");
        hwrTable.appendChild(hwrTableCaption);
        hwrTableCaption.innerText = "Svar fra HowWeRoll spøreundersøkelse";

        var hwrTableTHead = document.createElement("thead");
        hwrTable.appendChild(hwrTableTHead);

        var hwrTableTHeadCol1 = document.createElement("th");
        hwrTableTHead.appendChild(hwrTableTHeadCol1);
        hwrTableTHeadCol1.innerText = "nøkkelord";

        var hwrTableTHeadCol2 = document.createElement("th");
        hwrTableTHead.appendChild(hwrTableTHeadCol2);
        hwrTableTHeadCol2.innerText = "verdi";

        var hwrTableTBody = document.createElement("tbody");
        hwrTable.appendChild(hwrTableTBody);

        // personElem1.setAttribute("first-name", "eric");
    }

    // Originalt fra https://stackoverflow.com/a/29676966 (sett 2021-10-06)
    // (1) Loop through all URLs.
    // (2) For each URL, fetch it with the fetch API, store the returned promise in list.
    // (3) Additionally, when the request is finished, store the result in results.
    // (4) Create a new promise, that resolves, when all promises in list are resolved (i.e., all requests finished).
    // (5) Enjoy the fully populated results!
    // Listeelementer (1)-(5) er det referert til lengre nede i koden
    var list = [];
    // Her kan dere legge inn URL for dere filer på https://bacit.info/hwr
    var urls = ['https://bacit.info/hwr/20211007133136-ca1ee5f4aed8474c524e9b0a5cf44dc2.json',
        'https://bacit.info/hwr/20211007134101-6051deaf0f8640e3cf34d9372e10fdfe.json','https://bacit.info/hwr/20211007134458-d0ab1dc95fd3da58068fdd593b74a965.json'];
    var results = [];

    urls.forEach(function(url, i) { // (1)
        list.push( // (2)
            fetch(url).then(function(res){
                results[i] = res.json(); // (3)
            })
        );
    });

    Promise
        .all(list) // (4)
        .then(function() {
            // alert('all requests finished!'); // (5)

            // Eksempel med en tabell
            var hwrTable = document.createElement("table");
            document.body.appendChild(hwrTable);

            var hwrTableCaption = document.createElement("caption");
            hwrTable.appendChild(hwrTableCaption);
            hwrTableCaption.innerText = "Svar fra HowWeRoll spøreundersøkelse";

            var hwrTableTHead = document.createElement("thead");
            hwrTable.appendChild(hwrTableTHead);

            var hwrTableTBody = document.createElement("tbody");
            hwrTable.appendChild(hwrTableTBody);

            var counter = 0; // for å lage header-rad kun en gang
            for (let entry of results) {
                entry.then(e => {
                    // En ny rad i tabellen
                    var hwrTableTBodyRow = document.createElement("tr");
                    hwrTableTBody.appendChild(hwrTableTBodyRow);

                    Object.entries(e).forEach(([key, value]) => {
                        console.log(`${key}: ${value}`);

                        // Kun første gangen?
                        if (counter == 0) {
                            var hwrTableTHeadRow = document.createElement("th");
                            hwrTableTHead.appendChild(hwrTableTHeadRow);
                            hwrTableTHeadRow.innerText = key;
                        }

                        // Et nytt tabelldata innhold i raden
                        var hwrTableBodyRowData = document.createElement("td");
                        hwrTableTBodyRow.appendChild(hwrTableBodyRowData);
                        hwrTableBodyRowData.innerText = value;
                    });
                    counter++;
                    console.log("Test");
                    console.log(e);


                });
            }
        });

    // Disse er lovnader
    console.log(results);

    // Eksempler av for-løkker (ikke direkte relatert til "HowWeRoll"
    // Definerer en array for
    const numbers = [];
    for (let number = 0; number <= 12; number = number + 2) {
        console.log(number);
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push (sett 2021-10-07)
        numbers.push(number);
    }

    let index = 0;
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length (sett 2021-10-07)
    console.log(`Length of array of numbers is ${numbers.length}`);
    for (let element of numbers) {
        console.log(`${element} at index ${index}\n`);
        index++;
    }
    var canvas = document.getElementById('report');
    var context = canvas.getContext('2d');

    let theNavn, theEnavn, theDorn, theCora, theBors, theSorg, theTidring, theZorm, theKlorw, thePort, thePorp, theRore, theNorl = [];
    fetch('https://bacit.info/hwr/20211007133136-ca1ee5f4aed8474c524e9b0a5cf44dc2.json')
        .then(function (resp){
            return resp.json();
        })
        .then (function (test){
            console.log(test);


            context.font = '14px serif';
            context.fillText('dorn', 30, 24);
            context.fillText('cora', 30, 74);
            context.fillText('bors', 30, 124);
            context.fillText('sorg', 30, 174);
            context.fillText('tidring', 30, 224);
            context.fillText('zorm', 30, 274);
            context.fillText('klorw', 30, 324);
            context.fillText('port', 30, 374);
            context.fillText('porp', 30, 424);
            context.fillText('rore', 30, 474);
            context.fillText('norl', 30, 524);

            context.beginPath();
            context.moveTo(70,20);
            context.lineTo(170,20);

            context.moveTo(70,70);
            context.lineTo(170,70);

            context.moveTo(70,120);
            context.lineTo(170,120);

            context.moveTo(70,170);
            context.lineTo(170,170);

            context.moveTo(70,220);
            context.lineTo(170,220);

            context.moveTo(70,270);
            context.lineTo(170,270);

            context.moveTo(70,320);
            context.lineTo(170,320);

            context.moveTo(70,370);
            context.lineTo(170,370);

            context.moveTo(70,420);
            context.lineTo(170,420);

            context.moveTo(70,470);
            context.lineTo(170,470);

            context.moveTo(70,520);
            context.lineTo(170,520);

            context.stroke();

            var X = 70 + parseInt(test.dorn, 10);
            var Y = 20;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "lightgreen";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();
            //context.closePath();

            var X = 70 + parseInt(test.cora, 10);
            var Y = 70;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.bors, 10);
            var Y = 120;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.sorg, 10);
            var Y = 170;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.tidring, 10);
            var Y = 220;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.zorm, 10);
            var Y = 270;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.klorw, 10);
            var Y = 320;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.port, 10);
            var Y = 370;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.porp, 10);
            var Y = 420;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.rore, 10);
            var Y = 470;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();

            var X = 70 + parseInt(test.norl, 10);
            var Y = 520;
            var R = 5;
            context.beginPath();
            context.arc(X, Y, R, 0, 2*Math.PI, false);
            context.fillStyle = "red";
            context.fill();
            context.lineWidth = 1;
            context.strokeStyle = "black";
            context.stroke();
        });


</script>

</body>
</html>
